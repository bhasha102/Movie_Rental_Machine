/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movierentalmachine;

import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static movierentalmachine.CardReader.logger;
import static movierentalmachine.Session.log;

/**
 *
 * @author Mitul
 */
public class MovieRentalMachine extends javax.swing.JFrame {

    private static final String[] movieTableColumnNames = {"Movie Name", "Moive Cast", "Movie Genre", "Movie Rating"};
    private static final String[] releaseColumnNames = {"Movie Name"};
    private static final String[] depositColumnNames = {"Movie Name"};
    private static final String[] reserveColumnNames = {"Movie Name"};
    /**
     * Creates new form MovieRentalMachine
     */
    public MovieRentalMachine() {
        setDataModel();
        initComponents();
        operator = new Operator();
        movieTransaction = new MovieTransaction();
        session = new Session();
    }
    
    public void setDataModel(){
        defaultTableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }};
        defaultTableModel.setColumnIdentifiers(movieTableColumnNames);
        for (Movie movie : Movie.initialiseMovies()) {
            Object[] o = new Object[4];
            o[0] = movie.getMovieName();
            o[1] = movie.getMovieCast();
            o[2] = movie.getMovieGenre();
            o[3] = movie.getMovieRating();
            defaultTableModel.addRow(o);
        }
     
        rentTableModel = new DefaultTableModel();
        rentTableModel.setColumnIdentifiers(releaseColumnNames);
        returnTableModel = new DefaultTableModel();
        returnTableModel.setColumnIdentifiers(depositColumnNames);
        reserveTableModel = new DefaultTableModel();
        reserveTableModel.setColumnIdentifiers(reserveColumnNames);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rentMoviePopupMenu = new javax.swing.JPopupMenu();
        removeRentMovie = new javax.swing.JMenuItem();
        returntMoviePopupMenu = new javax.swing.JPopupMenu();
        removeReturnMovie = new javax.swing.JMenuItem();
        reserveMoviePopupMenu = new javax.swing.JPopupMenu();
        removeReservedMovie = new javax.swing.JMenuItem();
        jDialog1 = new javax.swing.JDialog();
        jOptionPane1 = new javax.swing.JOptionPane();
        startSessionButton = new javax.swing.JButton();
        rentMovieButton = new javax.swing.JButton();
        returnMovieButton = new javax.swing.JButton();
        startStopMachine = new javax.swing.JButton();
        movieScrollPane = new javax.swing.JScrollPane();
        movieTable = new javax.swing.JTable();
        rentScrollPane = new javax.swing.JScrollPane();
        rentedTable = new javax.swing.JTable();
        returnScrollPane = new javax.swing.JScrollPane();
        returnTable = new javax.swing.JTable();
        availableMoviesLabel = new javax.swing.JLabel();
        reservedMoviesLabel = new javax.swing.JLabel();
        reserveMovieButton = new javax.swing.JButton();
        rentedMoviesLabel = new javax.swing.JLabel();
        returnMoviesLabel = new javax.swing.JLabel();
        reserveScrollPane = new javax.swing.JScrollPane();
        reserveTable = new javax.swing.JTable();
        completeTransaction = new javax.swing.JButton();
        amountInformationLabel = new javax.swing.JLabel();
        amountPayableNowLabel = new javax.swing.JLabel();
        customerReceiptLabel = new javax.swing.JLabel();
        rentedNumberLabel = new javax.swing.JLabel();
        returnedMovieLabel = new javax.swing.JLabel();
        reservedMovieLabel = new javax.swing.JLabel();
        totalRentedNumberLabel = new javax.swing.JLabel();
        totalReturnedNumberLabel = new javax.swing.JLabel();
        totalReservedNumberLabel = new javax.swing.JLabel();
        amountInformationLabel1 = new javax.swing.JLabel();
        amountPayableFutureLabel = new javax.swing.JLabel();

        removeRentMovie.setText("Remove");
        removeRentMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRentMovieActionPerformed(evt);
            }
        });
        rentMoviePopupMenu.add(removeRentMovie);

        removeReturnMovie.setText("Remove");
        removeReturnMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeReturnMovieActionPerformed(evt);
            }
        });
        returntMoviePopupMenu.add(removeReturnMovie);

        removeReservedMovie.setText("Remove");
        removeReservedMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeReservedMovieActionPerformed(evt);
            }
        });
        reserveMoviePopupMenu.add(removeReservedMovie);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jDialog1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jOptionPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jDialog1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jOptionPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startSessionButton.setText("Start Session");
        startSessionButton.setEnabled(false);
        startSessionButton.setName("startSessionButton"); // NOI18N
        startSessionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startSessionButtonActionPerformed(evt);
            }
        });

        rentMovieButton.setText("Rent Movie");
        rentMovieButton.setEnabled(false);
        rentMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentMovieButtonActionPerformed(evt);
            }
        });

        returnMovieButton.setText("Return Movie");
        returnMovieButton.setEnabled(false);
        returnMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnMovieButtonActionPerformed(evt);
            }
        });

        startStopMachine.setText("Start Machine");
        startStopMachine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startStopMachineActionPerformed(evt);
            }
        });

        movieTable.setModel(defaultTableModel);
        movieTable.setEnabled(false);
        movieScrollPane.setViewportView(movieTable);

        rentedTable.setModel(rentTableModel);
        rentedTable.setComponentPopupMenu(rentMoviePopupMenu);
        rentedTable.setDoubleBuffered(true);
        rentScrollPane.setViewportView(rentedTable);

        returnTable.setModel(returnTableModel);
        returnTable.setComponentPopupMenu(returntMoviePopupMenu);
        returnScrollPane.setViewportView(returnTable);

        availableMoviesLabel.setText("Available Movies");

        reservedMoviesLabel.setText("Movies to be reserved");

        reserveMovieButton.setText("Reserve Movie");
        reserveMovieButton.setEnabled(false);
        reserveMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveMovieButtonActionPerformed(evt);
            }
        });

        rentedMoviesLabel.setText("Movies to be rented");

        returnMoviesLabel.setText("Movies to be returned");

        reserveTable.setModel(reserveTableModel);
        reserveTable.setComponentPopupMenu(reserveMoviePopupMenu);
        reserveScrollPane.setViewportView(reserveTable);

        completeTransaction.setText("Complete Transaction");
        completeTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeTransactionActionPerformed(evt);
            }
        });

        amountInformationLabel.setText("Total amount payable now is:");

        amountPayableNowLabel.setText("---------");

        customerReceiptLabel.setText("Customer Receipt");

        rentedNumberLabel.setText("Number of movies you have rented :");

        returnedMovieLabel.setText("Number of movies you have returned :");

        reservedMovieLabel.setText("Number of movies you have reserved :");

        totalRentedNumberLabel.setText("---------");

        totalReturnedNumberLabel.setText("---------");

        totalReservedNumberLabel.setText("---------");

        amountInformationLabel1.setText("Total amount payable in future (reserved movie)  is:");

        amountPayableFutureLabel.setText("---------");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(movieScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rentedMoviesLabel)
                            .addComponent(rentMovieButton))
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reservedMoviesLabel)
                            .addComponent(reserveMovieButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(returnMovieButton)
                            .addComponent(returnMoviesLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startStopMachine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(startSessionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(138, 138, 138)
                        .addComponent(availableMoviesLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(rentScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(reserveScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(returnScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(completeTransaction, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(amountInformationLabel1)
                                            .addComponent(amountInformationLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(amountPayableNowLabel)
                                            .addComponent(amountPayableFutureLabel)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(reservedMovieLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(totalReservedNumberLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(returnedMovieLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(totalReturnedNumberLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rentedNumberLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(totalRentedNumberLabel)))))
                        .addGap(233, 233, 233))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(customerReceiptLabel)
                        .addGap(286, 286, 286))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startStopMachine)
                        .addGap(11, 11, 11)
                        .addComponent(startSessionButton))
                    .addComponent(availableMoviesLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movieScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reserveMovieButton)
                    .addComponent(returnMovieButton)
                    .addComponent(rentMovieButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnMoviesLabel)
                    .addComponent(rentedMoviesLabel)
                    .addComponent(reservedMoviesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reserveScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rentScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(returnScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(completeTransaction)
                .addGap(18, 18, 18)
                .addComponent(customerReceiptLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalRentedNumberLabel)
                    .addComponent(rentedNumberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalReturnedNumberLabel)
                    .addComponent(returnedMovieLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalReservedNumberLabel)
                    .addComponent(reservedMovieLabel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(amountPayableNowLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amountInformationLabel)
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amountInformationLabel1)
                            .addComponent(amountPayableFutureLabel))))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startSessionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startSessionButtonActionPerformed
        if("Start Session".equals(startSessionButton.getText())){
            session.startSession();
            String customerCardNumber = JOptionPane.showInputDialog(MovieRentalMachine.this, "Please enter your 4-digit card number");
            if(CardReader.validateCardNumner(customerCardNumber)){
                String customerZipCode = JOptionPane.showInputDialog(MovieRentalMachine.this, "Please enter your 5-digit zip code");
                if(CardReader.isIntegerValid(customerZipCode)){
                    Integer zipCode = Integer.parseInt(customerZipCode);
                    if(zipCode != Constants.VALID_ZIP_CODE){
                        JOptionPane.showMessageDialog(MovieRentalMachine.this, "Your PIN is invalid");
                        logger.log(Level.INFO, "The zip code is invalid.... Cannot Start Session");
                    }else{
                        logger.log(Level.INFO, "The zip code is valid.... Starting Session");
                        rentMovieButton.setEnabled(true);
                        returnMovieButton.setEnabled(true);
                        reserveMovieButton.setEnabled(true);
                        startSessionButton.setText("Cancel");
                        movieTable.setEnabled(true);
                    }
                }else{
                    JOptionPane.showMessageDialog(MovieRentalMachine.this, "Your Zip Code is invalid");
                }
            }else{
                JOptionPane.showMessageDialog(MovieRentalMachine.this, "Your card is invalid");
            }
        }else{
            stopSession();

        }
    }//GEN-LAST:event_startSessionButtonActionPerformed

    private void startStopMachineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startStopMachineActionPerformed
        if ("Start Machine".equals(startStopMachine.getText())){
            operator.startMachine();
            startStopMachine.setText("Stop Machine");
            startSessionButton.setEnabled(true);
            
        }else{
            operator.stopMachine();
            startStopMachine.setText("Start Machine");
            rentMovieButton.setEnabled(false);
            returnMovieButton.setEnabled(false);
            startSessionButton.setEnabled(false);
        }
    }//GEN-LAST:event_startStopMachineActionPerformed

    private void rentMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentMovieButtonActionPerformed
        movieTransaction.rentMovie();
        String movieName = movieTable.getValueAt(movieTable.getSelectedRow(), 0).toString();
        Object[] o = new Object[1];
        o[0] = movieName;
        rentTableModel.addRow(o);
    }//GEN-LAST:event_rentMovieButtonActionPerformed

    private void removeRentMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRentMovieActionPerformed
        int releaseMovieRow = rentedTable.getSelectedRow();
        rentTableModel.removeRow(releaseMovieRow);
    }//GEN-LAST:event_removeRentMovieActionPerformed

    private void removeReturnMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeReturnMovieActionPerformed
        int depositMovieRow = returnTable.getSelectedRow();
        returnTableModel.removeRow(depositMovieRow);
    }//GEN-LAST:event_removeReturnMovieActionPerformed

    private void returnMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnMovieButtonActionPerformed
        movieTransaction.returnMovie();
        String movieName = movieTable.getValueAt(movieTable.getSelectedRow(), 0).toString();
        Object[] o = new Object[1];
        o[0] = movieName;
        returnTableModel.addRow(o);
    }//GEN-LAST:event_returnMovieButtonActionPerformed

    private void reserveMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveMovieButtonActionPerformed
        movieTransaction.reserveMovie();
        String movieName = movieTable.getValueAt(movieTable.getSelectedRow(), 0).toString();
        Object[] o = new Object[1];
        o[0] = movieName;
        reserveTableModel.addRow(o);
    }//GEN-LAST:event_reserveMovieButtonActionPerformed

    private void removeReservedMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeReservedMovieActionPerformed
        int reserveMovieRow = reserveTable.getSelectedRow();
        reserveTableModel.removeRow(reserveMovieRow);
    }//GEN-LAST:event_removeReservedMovieActionPerformed

    private void completeTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeTransactionActionPerformed
        int rentedMoviesTotal = rentedTable.getRowCount();
        int returnMoviesTotal = returnTable.getRowCount();
        int reserveMoviesTotal = reserveTable.getRowCount();
        totalRentedNumberLabel.setText(String.valueOf(rentedMoviesTotal));
        totalReturnedNumberLabel.setText(String.valueOf(returnMoviesTotal));
        totalReservedNumberLabel.setText(String.valueOf(reserveMoviesTotal));
        int amountPayableNow = rentedMoviesTotal*Constants.RENT_AMOUNT - returnMoviesTotal*Constants.DEPOSIT_AMOUNT;
        int amountPayableFuture = reserveMoviesTotal*Constants.RENT_AMOUNT;
        amountPayableNowLabel.setText(String.valueOf(amountPayableNow));
        amountPayableFutureLabel.setText(String.valueOf(amountPayableFuture));
        int result = JOptionPane.showConfirmDialog(MovieRentalMachine.this, "Do you want to perform another transaction?",
                                                    "Transaction confirmation",JOptionPane.YES_NO_OPTION);
        
        logger.log(Level.INFO, "Total movies rented in the transaction ---   " + rentedMoviesTotal);
        logger.log(Level.INFO, "Total movies returned in the transaction ---   " + returnMoviesTotal);
        logger.log(Level.INFO, "Total movies reserved in the transaction ---   " + reserveMoviesTotal);
        logger.log(Level.INFO, "Total amount payable right now ---   " + amountPayableNow);
        logger.log(Level.INFO, "Total amount payable in future ---   " + amountPayableFuture);
        
        if(result == 1){
            stopSession();
        }
    
    }//GEN-LAST:event_completeTransactionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MovieRentalMachine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MovieRentalMachine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MovieRentalMachine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MovieRentalMachine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MovieRentalMachine().setVisible(true);
            }
        });
    }
    
    public void stopSession(){
        rentTableModel = new DefaultTableModel();
        rentedTable.setModel(rentTableModel);
        rentTableModel.setColumnIdentifiers(releaseColumnNames);
        rentedTable.setEnabled(false);
        returnTableModel = new DefaultTableModel();
        returnTable.setModel(returnTableModel);
        returnTableModel.setColumnIdentifiers(depositColumnNames);
        returnTable.setEnabled(false);
        reserveTableModel = new DefaultTableModel();
        reserveTable.setModel(reserveTableModel);
        reserveTableModel.setColumnIdentifiers(reserveColumnNames);
        reserveTable.setEnabled(false);
        startSessionButton.setText("Start Session");
        rentMovieButton.setEnabled(false);
        returnMovieButton.setEnabled(false);
        reserveMovieButton.setEnabled(false);
        totalRentedNumberLabel.setText("-----");
        totalReturnedNumberLabel.setText("-----");
        totalReservedNumberLabel.setText("-----");
        amountPayableNowLabel.setText("-----");
        amountPayableFutureLabel.setText("-----");
        session.endSession();
    }
    
    private DefaultTableModel defaultTableModel;
    private DefaultTableModel rentTableModel;
    private DefaultTableModel returnTableModel;
    private DefaultTableModel reserveTableModel;
    private Operator operator;
    private MovieTransaction movieTransaction;
    private Session session;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountInformationLabel;
    private javax.swing.JLabel amountInformationLabel1;
    private javax.swing.JLabel amountPayableFutureLabel;
    private javax.swing.JLabel amountPayableNowLabel;
    private javax.swing.JLabel availableMoviesLabel;
    private javax.swing.JButton completeTransaction;
    private javax.swing.JLabel customerReceiptLabel;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JScrollPane movieScrollPane;
    private javax.swing.JTable movieTable;
    private javax.swing.JMenuItem removeRentMovie;
    private javax.swing.JMenuItem removeReservedMovie;
    private javax.swing.JMenuItem removeReturnMovie;
    private javax.swing.JButton rentMovieButton;
    private javax.swing.JPopupMenu rentMoviePopupMenu;
    private javax.swing.JScrollPane rentScrollPane;
    private javax.swing.JLabel rentedMoviesLabel;
    private javax.swing.JLabel rentedNumberLabel;
    private javax.swing.JTable rentedTable;
    private javax.swing.JButton reserveMovieButton;
    private javax.swing.JPopupMenu reserveMoviePopupMenu;
    private javax.swing.JScrollPane reserveScrollPane;
    private javax.swing.JTable reserveTable;
    private javax.swing.JLabel reservedMovieLabel;
    private javax.swing.JLabel reservedMoviesLabel;
    private javax.swing.JButton returnMovieButton;
    private javax.swing.JLabel returnMoviesLabel;
    private javax.swing.JScrollPane returnScrollPane;
    private javax.swing.JTable returnTable;
    private javax.swing.JLabel returnedMovieLabel;
    private javax.swing.JPopupMenu returntMoviePopupMenu;
    private javax.swing.JButton startSessionButton;
    private javax.swing.JButton startStopMachine;
    private javax.swing.JLabel totalRentedNumberLabel;
    private javax.swing.JLabel totalReservedNumberLabel;
    private javax.swing.JLabel totalReturnedNumberLabel;
    // End of variables declaration//GEN-END:variables
}
